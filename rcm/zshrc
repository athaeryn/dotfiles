eval $(/opt/homebrew/bin/brew shellenv)
#    # Source things only if they exist
#    function try_source () {
#      if [ -f "$@" ]; then
#        source "$@"
#      fi
#    }
#
#
#    autoload -U colors zsh-mime-setup select-word-style
#    colors                  # colors
#    zsh-mime-setup          # run everything as if it's an executable
#    select-word-style bash  # ctrl+w on words


# Bind some keys
# bindkey -v # Vim mode
bindkey '^a' beginning-of-line
bindkey '^d' delete-char
bindkey '^e' end-of-line
bindkey '^r' history-incremental-search-backward
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word

# Prevent things like `git reset --hard HEAD^` failing because of the ^
setopt NO_NOMATCH

#
#    # http://dougblack.io/words/zsh-vi-mode.html
#    function zle-line-init zle-keymap-select {
#      VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
#      RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/}"
#      zle reset-prompt
#    }
#
#    zle -N zle-line-init
#    zle -N zle-keymap-select
#    export KEYTIMEOUT=1


fpath=(/usr/local/share/zsh-completions /usr/local/share/zsh/site-functions $fpath)

autoload -Uz compinit colors add-zsh-hook
colors
compinit

# Colored auto completion
zstyle ':completion:*' list-colors "di=34"
# Case insensitive completion
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

# Stop zsh eating space before my pipe chars
export ZLE_REMOVE_SUFFIX_CHARS=''

# Allow extended glob like ^file, *~file (everything except file)
setopt extended_glob

# Enable using comments interactively (like Bash)
setopt interactivecomments


# HISTORY
HISTFILE=~/.zhistory
HISTSIZE=SAVEHIST=10000
setopt sharehistory
setopt extendedhistory


# Function
function wordplay () {
  while read word; do
  grep "$word" /usr/share/dict/words;
  echo "";
  done
}

set_prompt() {
  local LEFT='▓'
  local RIGHT='▓'
  # Check if in a git folder
  if [ -d '.git' ] || [[ $(command git rev-parse --is-inside-work-tree 2>/dev/null) == "true" ]]; then
    # Check for uncommited changes, ignore untracked files
    if [[ -n $(command git status --porcelain --untracked-files=no | tail -1) ]]; then
      LEFT="%{$fg[yellow]%}$LEFT"
      RIGHT="%{$fg[yellow]%}$RIGHT"
    else
      LEFT="%{$fg[green]%}$LEFT"
      RIGHT="%{$fg[green]%}$RIGHT"
    fi
  else
    LEFT="%{$fg[blue]%}$LEFT"
    RIGHT="%{$fg[blue]%}$RIGHT"
  fi
  PROMPT="$LEFT %{$fg[blue]%}%2~ $RIGHT%{$reset_color%} "
}

add-zsh-hook precmd set_prompt

# Show todos
alias todos="ag (TODO|FIXME)\:?"

export VISUAL=vim
export EDITOR=vim

# Use the best vim available.
if which nvim >/dev/null ; then
  alias vim="nvim"
  export EDITOR=nvim
fi

# Always use LSCOLORS
alias ls="ls -G"

# ls -la with trailing / for directories
alias lsa="ls -lahp"

# List repos
alias repos="tree ~/code -L 2"

source ~/.zshenv

alias did="vim +'normal Go' +'r!date' +'normal Go' ~/did.txt"

alias https-server="http-server --ssl --cert ~/ssl/server.crt --key ~/ssl/server.key "


# Background color stuff
export BACKGROUND=256
export BACKGROUND_MIN=233
export BACKGROUND_MAX=256

function backgroundLighter() {
  if [ "$BACKGROUND" -lt "$BACKGROUND_MAX" ]; then
    export BACKGROUND=$((BACKGROUND+1))
  fi
  echo "$BACKGROUND"
}

function backgroundDarker() {
  if [ "$BACKGROUND" -gt "$BACKGROUND_MIN" ]; then
    export BACKGROUND=$((BACKGROUND-1))
  fi
  echo "$BACKGROUND"
}

if which opam >/dev/null ; then
  eval `opam config env`
fi

# Fast Node Manager
if which fnm >/dev/null ; then
  eval "$(fnm env --use-on-cd)"
fi

export USE_GKE_GCLOUD_AUTH_PLUGIN=True
