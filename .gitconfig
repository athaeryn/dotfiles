[user]
    name = Mike Anderson
    email = athaeryn@me.com
[alias]
    # Many of these stolen from here: http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
    # So look there for documentation
    # This also could use some cleaning up...

    # Spit out this list
    la = !git config -l | grep alias | cut -c 7-

    # Basic little helpers
    ci = commit
    st = status -s
    stl = status
    br = branch
    ci = commit
    cl = clone
    co = checkout
    co = checkout
    cp = cherry-pick
    d = diff
    dc = diff --cached
    dlc = diff --cached HEAD^
    diff = diff --word-diff
    ls = ls-files

    mrnf = merge --no-ff

    r = reset
    r1 = reset HEAD^
    r2 = reset HEAD^^
    rh = reset --hard
    rh1 = reset HEAD^ --hard
    rh2 = reset HEAD^^ --hard

    forcepush = push -f

    # Handy: search
    f = "!git ls-files | grep -i"

    diffr  = "!f() { git diff "$1"^.."$1"; }; f"
    dl = "!git ll -1"
    done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
    dr  = "!f() { git diff "$1"^.."$1"; }; f"
    filelog = log -u
    fl = log -u
    gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
    gr = grep -Ii
    grep = grep -Ii

    # LOG THINGS #
    # Good log
    l = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    # One line commits with dates
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    # Log with relative dates
    ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
    # Log with list of changed files
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    # Default short git log
    le = log --oneline --decorate

    lc  = "!f() { git ll "$1"^.."$1"; }; f"

    # GRAPHS! PRETTY! #
    lg1 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
    lg2 = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)' --abbrev-commit
    lg = !"git lg1"

[push]
    default = tracking
[core]
    autocrlf = input
    excludesfile = ~/.gitignore_global
[color]
    ui = true
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
